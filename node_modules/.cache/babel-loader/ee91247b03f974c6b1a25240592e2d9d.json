{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [url]);\n  const reFetchData = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(url);\n      setData(res.data);\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n  return {\n    data,\n    loading,\n    error,\n    reFetchData\n  };\n};\n_s(useFetch, \"mBeKus6ctv1eydCctzq+7NhvPMc=\");\nexport default useFetch;","map":{"version":3,"names":["axios","useEffect","useState","useFetch","url","data","setData","loading","setLoading","error","setError","fetchData","res","get","err","reFetchData"],"sources":["/Volumes/SAVE/SOURCE EXAMPLE/doctor-web-reactjs-main/src/components/hooks/useFetch.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = (url) =>{\n    const [data, setData] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() =>{\n        const fetchData = async() =>{\n            setLoading(true);\n            try{\n                const res = await axios.get(url);\n                setData(res.data);\n            }catch(err){\n                setError(err);\n                setLoading(false)\n            }\n            setLoading(false);\n        }\n        fetchData();\n    },[url])\n    const reFetchData = async() =>{\n        setLoading(true);\n        try{\n            const res = await axios.get(url);\n            setData(res.data);\n        }\n        catch(err){\n            setError(err);\n            setLoading(false);\n        }\n        setLoading(false);\n    }\n\n    return {data, loading, error, reFetchData}\n}\n\nexport default useFetch;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAI;EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAK;IACX,MAAMU,SAAS,GAAG,YAAU;MACxBH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAG;QACC,MAAMI,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACT,GAAG,CAAC;QAChCE,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;MACrB,CAAC,QAAMS,GAAG,EAAC;QACPJ,QAAQ,CAACI,GAAG,CAAC;QACbN,UAAU,CAAC,KAAK,CAAC;MACrB;MACAA,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDG,SAAS,EAAE;EACf,CAAC,EAAC,CAACP,GAAG,CAAC,CAAC;EACR,MAAMW,WAAW,GAAG,YAAU;IAC1BP,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACC,MAAMI,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACT,GAAG,CAAC;MAChCE,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;IACrB,CAAC,CACD,OAAMS,GAAG,EAAC;MACNJ,QAAQ,CAACI,GAAG,CAAC;MACbN,UAAU,CAAC,KAAK,CAAC;IACrB;IACAA,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAACH,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEM;EAAW,CAAC;AAC9C,CAAC;AAAA,GAjCKZ,QAAQ;AAmCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}